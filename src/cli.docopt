Commitments, the command line system for shared task management.

Usage:
    commitments [options] init
    commitments [options] add user <username>
    commitments [options] list users
    commitments [options] update task
    commitments [options] diff <taskfilename>
    commitments [options] make <template> [<context>]
    commitments [options] commit <taskfilename>
    commitments [options] share <taskfilename> with <username>
    commitments [options] unshare <taskfilename> with <username>
    commitments [options] task done <taskfilename>
    commitments [options] task undone <taskfilename>
    commitments --version
    commitments --help

Options:
    --version           Print the current version
    --help              Tells us all about it
    --directory=<dir>   Use this directory, default is .
    --debug             Print extra info to help debug

The available commands are:
    init            Set up a new commitments repository system
    add user        Create a home directory and repository for a user
    list users      List all the users
    update task     This is the fundamental action, add/edit a task and run
                    and subsequent required workflow or actions. Reads stdin.
    diff            Compare a task against the prior version, generating a 
                    logical diff usable to drive workflow.
    make            Reading yaml from stdin, make a script/string with a 
                    template.
    commit          Once an update is all done, commit it into the record to
                    drive workflow on subsequent updates and diffs.
    share with      Make a task available to another user's task list.
    unshare with    Take a task away from another user.
    task done       When a task is all done.
    task undone     When a task goes from done back again.

  delete task
  accept <taskfile> by <username>
  reject <taskfile> by <username>
  poke <username> about <taskfile>
  list tasks
